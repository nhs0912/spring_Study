<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	                    http://www.springframework.org/schema/beans/spring-beans.xsd" default-init-method="default_init" default-destroy-method="default_destroy"
	                    default-autowire='byName'
	                    
	                    
	                    >


	<bean id='obj1' class='kr.co.softcampus.beans.TestBean1'>
		<property name="data1" ref='data_bean1'></property>
		<property name="data2" ref='data_bean1'></property>
	</bean>

	<bean id='data_bean1' class='kr.co.softcampus.beans.DataBean1' scope='prototype'></bean>
	
	<bean id='obj2' class='kr.co.softcampus.beans.TestBean1' autowire='byName'/>
	
	<bean id='data1' class='kr.co.softcampus.beans.DataBean1'/>
	<bean id='data2' class='kr.co.softcampus.beans.DataBean1'/>
	
	<bean id='obj3' class='kr.co.softcampus.beans.TestBean2' autowire = 'byType'/>
	
	<bean id='data_bean2' class='kr.co.softcampus.beans.DataBean2'/>
	
	<bean id='obj4' class='kr.co.softcampus.beans.TestBean3'>
		<constructor-arg ref='data_bean2' index="0"></constructor-arg>
		<constructor-arg ref='data_bean2' index="1"></constructor-arg>						
	</bean>
	
	<bean id='obj5' class='kr.co.softcampus.beans.TestBean3' autowire='constructor'></bean>
	
	<bean id='obj6' class='kr.co.softcampus.beans.TestBean3'>
	
		<constructor-arg value='100' index = '0' type='int'></constructor-arg>
		<constructor-arg value='문자열' index='1' ></constructor-arg>
		<constructor-arg ref='data_bean2' index='2'></constructor-arg>
		<constructor-arg ref='data_bean2' index='3'></constructor-arg>
	
	</bean>
	
	
	<bean id='obj7' class='kr.co.softcampus.beans.TestBean3' autowire='constructor'>
		<constructor-arg value='200' index='0' type='int'/>
		<constructor-arg value='문자열2' index='1'/>		
	</bean>
	
	<bean id='obj8' class='kr.co.softcampus.beans.TestBean1'/>
	
	<bean id='obj9' class='kr.co.softcampus.beans.TestBean1' autowire='no'/>
	
	<!-- <bean class='kr.co.softcampus.beans.DataBean2'/> -->
	

	<!-- <bean id='t1' class='kr.co.softcampus.beans.TestBean' lazy-init='true'> 제네릭이 String인 List <property name="list1"> <list> <value>문자열1</value> <value>문자열2</value> <value>문자열3</value> </list> </property> 제네릭이 Integer인 List <property name="list2"> <list> 
		<value type='int'>100</value> <value type='int'>200</value> <value type='int'>300</value> </list> </property> 제네릭이 DataBean인 List <property name="list3"> <list> <bean class='kr.co.softcampus.beans.DataBean'></bean> <bean class='kr.co.softcampus.beans.DataBean'></bean> 
		<ref bean='data_bean' /> <ref bean='data_bean' /> </list> </property> 제네릭이 String인 Set <property name='set1'> <set> <value>문자열1</value> <value>문자열2</value> <value>문자열3</value> </set> </property> 제네릭이 Integer인 Set <property name='set2'> <set> <value type='int'>100</value> 
		<value type='int'>200</value> <value type='int'>300</value> </set> </property> 제네릭이 DataBean인 Set <property name='set3'> <set> <bean class='kr.co.softcampus.beans.DataBean'></bean> <bean class='kr.co.softcampus.beans.DataBean'></bean> <ref bean='data_bean' 
		/> <ref bean='data_bean' /> <ref bean='data_bean' /> <ref bean='data_bean' /> <ref bean='data_bean' /> <ref bean='data_bean' /> </set> </property> map <property name='map1'> <map> <entry key="a1" value='문자열'></entry> <entry key='a2' value='100' value-type='int'></entry> 
		<entry key='a3'> <bean class='kr.co.softcampus.beans.DataBean'></bean> </entry> <entry key='a4' value-ref='data_bean'></entry> <entry key='a5'> <list> <value>문자열1</value> <value>문자열2</value> <value>문자열3</value> </list> </entry> </map> </property> property 
		<property name='prop1'> <props> <prop key='p1'>문자열1</prop> <prop key='p2'>문자열2</prop> <prop key='p3'>문자열3</prop> </props> </property> </bean> -->

	<!-- <bean id='data_bean' class='kr.co.softcampus.beans.DataBean' scope='prototype' /> -->
	<!-- 객체가 생성될 때 생성자가 호출된 이루 init-method에 설정한 메서드가 자동으로 호출되고 IoC 컨테이너의 close메서드를 호출하면 객체가 소멸되며 destroy-method에 설정한 메서드가 자동으로 호출된다. -->

	<!-- <bean id ='t1' class='kr.co.softcampus.beans.TestBean1' lazy-init="true" init-method="bean1_init" destroy-method="bean1_destroy"></bean> -->
	<!-- init-method와 destroy-method가 설정되어 있지 않다면 default-init-method와 default-destroy-method에 설정되어 있는 메서드를 호출한다. -->
	<!-- <bean id='t2' class='kr.co.softcampus.beans.TestBean2' lazy-init='true'></bean> -->
	<!-- 만약 init-method, destroy-method와 default-init-method,default-destroy-method에 등록되어있는 메서드가 모두 있을 경우 init-method, destroy-method에 설정되어있는 메서드가 호출된다. -->
	<!-- <bean id='t3' class='kr.co.softcampus.beans.TestBean3' lazy-init='true' init-method='bean3_init' destroy-method='bean3_destroy'></bean> -->
	<!-- default-init-method,default-destroy-method : 설정한 메서드가 존재하지 않으면 무시된다. init-method,destroy-method : 설정한 메서드가 없으면 오류가 발생한다. -->
	<!-- <bean id='t4' class='kr.co.softcampus.beans.TestBean4' lazy-init='true' init-method='bean4_init' destroy-method='bean4_destroy' ></bean> -->
</beans>














